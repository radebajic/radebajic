<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://radebajic.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://radebajic.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-10-14T21:49:37+00:00</updated><id>https://radebajic.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">gant chart in python</title><link href="https://radebajic.github.io/blog/2024/gant-in-python/" rel="alternate" type="text/html" title="gant chart in python"/><published>2024-10-14T18:01:00+00:00</published><updated>2024-10-14T18:01:00+00:00</updated><id>https://radebajic.github.io/blog/2024/gant-in-python</id><content type="html" xml:base="https://radebajic.github.io/blog/2024/gant-in-python/"><![CDATA[<p>Visualizations are a crucial part of delivering the story of data. The time needed to produce one, and to do it in a consistent, structured manner throughout the whole claim/delay report, is often underestimated. Nothing leaves a worse impression than a chart that’s squinty, poorly designed, and full of riddles.</p> <p>I was searching for a way to make a Gantt chart without using planning software. Why? Because most planning software’s graphical outputs aren’t meant to be used in a size that can be screenshotted and pasted into an A4/letter-sized page width — anyone who’s tried that knows the struggle.</p> <p>Another reason is that I tried several “specialized” solutions for creating Gantt charts aimed at delivering presentation-type outputs i.e. slick, uncluttered charts ready to be used in PowerPoint or Word. However, these cost money, are clunky to use, and provide rigid, inconsistent outputs. Whoever came up with the idea to make a Gantt charting solution in PowerPoint is a true champion of awkward decisions.</p> <p>If only there was a tool that’s free, highly customizable, and—with some knowledge—could be utilized for visualization, data wrangling, and a thousand other tasks…</p> <p><em>[Python enters the scene.]</em></p> <p>There are a few Python libraries that could do this, but they were either too complex or not customizable enough. So I decided to make my own approach using the famous Matplotlib. Here’s a simple way to make a Gantt chart in Python using Matplotlib (and a few other libraries).</p> <p>First, we import the necessary libraries:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="n">matplotlib.patches</span> <span class="kn">import</span> <span class="n">Patch</span>
<span class="kn">from</span> <span class="n">pandas</span> <span class="kn">import</span> <span class="n">Timestamp</span>
</code></pre></div></div> <p>Next, we define the data we want to visualize. We have a dictionary containing the task name, department, start date, end date, and completion percentage. The data is stored in a dictionary format for presentation purposes, but it could also be in CSV, Excel, or any other format.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Project Data
</span><span class="n">data</span> <span class="o">=</span> <span class="p">{</span>
    <span class="sh">'</span><span class="s">Task</span><span class="sh">'</span><span class="p">:</span> <span class="p">{</span>
        <span class="mi">0</span><span class="p">:</span> <span class="sh">'</span><span class="s">Site </span><span class="se">\n</span><span class="s"> Preparation</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">1</span><span class="p">:</span> <span class="sh">'</span><span class="s">Foundation </span><span class="se">\n</span><span class="s"> Work</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">2</span><span class="p">:</span> <span class="sh">'</span><span class="s">Structural </span><span class="se">\n</span><span class="s"> Framing</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">3</span><span class="p">:</span> <span class="sh">'</span><span class="s">Roofing </span><span class="se">\n</span><span class="s"> Installation</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">4</span><span class="p">:</span> <span class="sh">'</span><span class="s">Exterior </span><span class="se">\n</span><span class="s"> Finishing</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">5</span><span class="p">:</span> <span class="sh">'</span><span class="s">Plumbing </span><span class="se">\n</span><span class="s"> Installation</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">6</span><span class="p">:</span> <span class="sh">'</span><span class="s">Electrical </span><span class="se">\n</span><span class="s"> Installation</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">7</span><span class="p">:</span> <span class="sh">'</span><span class="s">HVAC </span><span class="se">\n</span><span class="s"> Installation</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">8</span><span class="p">:</span> <span class="sh">'</span><span class="s">Interior </span><span class="se">\n</span><span class="s"> Finishing</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">9</span><span class="p">:</span> <span class="sh">'</span><span class="s">Landscaping </span><span class="se">\n</span><span class="s"> and Cleanup</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">10</span><span class="p">:</span> <span class="sh">'</span><span class="s">Final </span><span class="se">\n</span><span class="s"> Inspection</span><span class="sh">'</span>
    <span class="p">},</span>
    
    <span class="sh">'</span><span class="s">Department</span><span class="sh">'</span><span class="p">:</span> <span class="p">{</span>
        <span class="mi">0</span><span class="p">:</span> <span class="sh">'</span><span class="s">Contractor D</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">1</span><span class="p">:</span> <span class="sh">'</span><span class="s">Contractor A</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">2</span><span class="p">:</span> <span class="sh">'</span><span class="s">Contractor A</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">3</span><span class="p">:</span> <span class="sh">'</span><span class="s">Contractor B</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">4</span><span class="p">:</span> <span class="sh">'</span><span class="s">Contractor C</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">5</span><span class="p">:</span> <span class="sh">'</span><span class="s">Contractor B</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">6</span><span class="p">:</span> <span class="sh">'</span><span class="s">Contractor B</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">7</span><span class="p">:</span> <span class="sh">'</span><span class="s">Contractor B</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">8</span><span class="p">:</span> <span class="sh">'</span><span class="s">Contractor C</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">9</span><span class="p">:</span> <span class="sh">'</span><span class="s">Contractor D</span><span class="sh">'</span><span class="p">,</span>
        <span class="mi">10</span><span class="p">:</span> <span class="sh">'</span><span class="s">All</span><span class="sh">'</span>
    <span class="p">},</span>
    
    <span class="sh">'</span><span class="s">Start</span><span class="sh">'</span><span class="p">:</span> <span class="p">{</span>
        <span class="mi">0</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-08-23</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">1</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-09-02</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">2</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-09-20</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">3</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-09-20</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">4</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-09-20</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">5</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-09-28</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">6</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-10-11</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">7</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-10-18</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">8</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-10-18</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">9</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-10-25</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">10</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-11-01</span><span class="sh">'</span><span class="p">)</span>
    <span class="p">},</span>
    
    <span class="sh">'</span><span class="s">End</span><span class="sh">'</span><span class="p">:</span> <span class="p">{</span>
        <span class="mi">0</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-09-27</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">1</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-10-04</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">2</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-11-08</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">3</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-11-08</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">4</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-11-08</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">5</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-10-11</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">6</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-11-08</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">7</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-11-01</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">8</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-11-01</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">9</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-11-15</span><span class="sh">'</span><span class="p">),</span>
        <span class="mi">10</span><span class="p">:</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">'</span><span class="s">2024-11-22</span><span class="sh">'</span><span class="p">)</span>
    <span class="p">},</span>
    
    <span class="sh">'</span><span class="s">Completion</span><span class="sh">'</span><span class="p">:</span> <span class="p">{</span>
        <span class="mi">0</span><span class="p">:</span> <span class="mf">1.0</span><span class="p">,</span>
        <span class="mi">1</span><span class="p">:</span> <span class="mf">1.0</span><span class="p">,</span>
        <span class="mi">2</span><span class="p">:</span> <span class="mf">0.42</span><span class="p">,</span>
        <span class="mi">3</span><span class="p">:</span> <span class="mf">0.42</span><span class="p">,</span>
        <span class="mi">4</span><span class="p">:</span> <span class="mf">0.42</span><span class="p">,</span>
        <span class="mi">5</span><span class="p">:</span> <span class="mf">1.0</span><span class="p">,</span>
        <span class="mi">6</span><span class="p">:</span> <span class="mf">0.0</span><span class="p">,</span>
        <span class="mi">7</span><span class="p">:</span> <span class="mf">0.0</span><span class="p">,</span>
        <span class="mi">8</span><span class="p">:</span> <span class="mf">0.0</span><span class="p">,</span>
        <span class="mi">9</span><span class="p">:</span> <span class="mf">0.0</span><span class="p">,</span>
        <span class="mi">10</span><span class="p">:</span> <span class="mf">0.0</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <p>Then, we prepare the data for Matplotlib. We calculate the number of days from the project start to the task start, the number of days from the project start to the task end, the days between the start and end of each task, and the days from the start to the current progression of each task. Additionally, we create a column with the corresponding color for each department.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">##### DATA PREP ##### 
</span><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="c1"># project start date
</span><span class="n">proj_start</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">Start</span><span class="p">.</span><span class="nf">min</span><span class="p">()</span>

<span class="c1"># number of days from project start to task start
</span><span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">start_num</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">Start</span> <span class="o">-</span> <span class="n">proj_start</span><span class="p">).</span><span class="n">dt</span><span class="p">.</span><span class="n">days</span>

<span class="c1"># number of days from project start to end of tasks
</span><span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">end_num</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">End</span> <span class="o">-</span> <span class="n">proj_start</span><span class="p">).</span><span class="n">dt</span><span class="p">.</span><span class="n">days</span>

<span class="c1"># days between start and end of each task
</span><span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">days_start_to_end</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">end_num</span> <span class="o">-</span> <span class="n">df</span><span class="p">.</span><span class="n">start_num</span>

<span class="c1"># days between start and current progression of each task
</span><span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">current_num</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">days_start_to_end</span> <span class="o">*</span> <span class="n">df</span><span class="p">.</span><span class="n">Completion</span>

<span class="c1"># create a column with the color for each department
</span><span class="k">def</span> <span class="nf">color</span><span class="p">(</span><span class="n">row</span><span class="p">):</span>
    <span class="n">c_dict</span> <span class="o">=</span> <span class="p">{</span><span class="sh">'</span><span class="s">Contractor A</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">#E64646</span><span class="sh">'</span><span class="p">,</span> 
              <span class="sh">'</span><span class="s">Contractor B</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">#E69646</span><span class="sh">'</span><span class="p">,</span> 
              <span class="sh">'</span><span class="s">Contractor C</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">#34D05C</span><span class="sh">'</span><span class="p">,</span> 
              <span class="sh">'</span><span class="s">Contractor D</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">#34D0C3</span><span class="sh">'</span><span class="p">,</span> 
              <span class="sh">'</span><span class="s">All</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">#3475D0</span><span class="sh">'</span><span class="p">}</span>
    <span class="k">return</span> <span class="n">c_dict</span><span class="p">[</span><span class="n">row</span><span class="p">[</span><span class="sh">'</span><span class="s">Department</span><span class="sh">'</span><span class="p">]]</span>

<span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">color</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="nf">apply</span><span class="p">(</span><span class="n">color</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="c1"># Reverse the DataFrame to reverse task order
</span><span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">iloc</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nf">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div></div> <p>Next, we plot the data by creating a horizontal bar chart that includes the task name, the number of days from the project start to the current progression of each task, the days between the start and end of each task, and the color for each department. We also place the task labels inside the task bars, display the completion percentage outside the bars, and set the ticks accordingly.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">##### PLOT #####
</span><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>
<span class="c1"># bars
</span><span class="n">ax</span><span class="p">.</span><span class="nf">barh</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">Task</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">current_num</span><span class="p">,</span> <span class="n">left</span><span class="o">=</span><span class="n">df</span><span class="p">.</span><span class="n">start_num</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">df</span><span class="p">.</span><span class="n">color</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">barh</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">Task</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">days_start_to_end</span><span class="p">,</span> <span class="n">left</span><span class="o">=</span><span class="n">df</span><span class="p">.</span><span class="n">start_num</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">df</span><span class="p">.</span><span class="n">color</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>

<span class="c1"># Place task labels inside the task bars and fix font size
</span><span class="k">for</span> <span class="n">idx</span><span class="p">,</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">df</span><span class="p">.</span><span class="nf">iterrows</span><span class="p">():</span>
    <span class="n">ax</span><span class="p">.</span><span class="nf">text</span><span class="p">(</span>
        <span class="n">row</span><span class="p">.</span><span class="n">start_num</span> <span class="o">+</span> <span class="p">(</span><span class="n">row</span><span class="p">.</span><span class="n">days_start_to_end</span> <span class="o">/</span> <span class="mi">2</span><span class="p">),</span>  <span class="c1"># Middle of the task bar
</span>        <span class="nf">float</span><span class="p">(</span><span class="n">idx</span><span class="p">)</span> <span class="k">if</span> <span class="nf">isinstance</span><span class="p">(</span><span class="n">idx</span><span class="p">,</span> <span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nb">float</span><span class="p">))</span> <span class="k">else</span> <span class="mf">0.0</span><span class="p">,</span>  <span class="c1"># Ensure idx is convertible to float
</span>        <span class="n">row</span><span class="p">.</span><span class="n">Task</span><span class="p">,</span> 
        <span class="n">va</span><span class="o">=</span><span class="sh">'</span><span class="s">center</span><span class="sh">'</span><span class="p">,</span> 
        <span class="n">ha</span><span class="o">=</span><span class="sh">'</span><span class="s">center</span><span class="sh">'</span><span class="p">,</span> 
        <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">black</span><span class="sh">'</span><span class="p">,</span> 
        <span class="n">fontsize</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span>  <span class="c1"># Font for task label
</span>        <span class="n">weight</span><span class="o">=</span><span class="sh">'</span><span class="s">bold</span><span class="sh">'</span><span class="p">,</span>
        <span class="n">wrap</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
    <span class="p">)</span>
    
    <span class="c1"># Display completion percentage outside the bar
</span>    <span class="n">ax</span><span class="p">.</span><span class="nf">text</span><span class="p">(</span>
        <span class="n">row</span><span class="p">.</span><span class="n">end_num</span> <span class="o">+</span> <span class="mf">0.5</span><span class="p">,</span> 
        <span class="nf">float</span><span class="p">(</span><span class="n">idx</span><span class="p">)</span> <span class="k">if</span> <span class="nf">isinstance</span><span class="p">(</span><span class="n">idx</span><span class="p">,</span> <span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nb">float</span><span class="p">))</span> <span class="k">else</span> <span class="mf">0.0</span><span class="p">,</span>  <span class="c1"># Ensure idx is convertible to float
</span>        <span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="nf">int</span><span class="p">(</span><span class="n">row</span><span class="p">.</span><span class="n">Completion</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span><span class="si">}</span><span class="s">%</span><span class="sh">"</span><span class="p">,</span> 
        <span class="n">va</span><span class="o">=</span><span class="sh">'</span><span class="s">center</span><span class="sh">'</span><span class="p">,</span> 
        <span class="n">ha</span><span class="o">=</span><span class="sh">'</span><span class="s">left</span><span class="sh">'</span><span class="p">,</span> 
        <span class="n">alpha</span><span class="o">=</span><span class="mf">0.8</span><span class="p">,</span>
        <span class="n">fontsize</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span>  <span class="c1"># Font for completion percentage
</span>    <span class="p">)</span>

<span class="c1"># grid lines
</span><span class="n">ax</span><span class="p">.</span><span class="nf">set_axisbelow</span><span class="p">(</span><span class="bp">True</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">xaxis</span><span class="p">.</span><span class="nf">grid</span><span class="p">(</span><span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">gray</span><span class="sh">'</span><span class="p">,</span> <span class="n">linestyle</span><span class="o">=</span><span class="sh">'</span><span class="s">dashed</span><span class="sh">'</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.2</span><span class="p">,</span> <span class="n">which</span><span class="o">=</span><span class="sh">'</span><span class="s">major</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># ticks
</span><span class="n">xticks</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">end_num</span><span class="p">.</span><span class="nf">max</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span>  <span class="c1"># Set ticks every 7 days (one week)
</span><span class="n">xticks_labels</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">date_range</span><span class="p">(</span><span class="n">proj_start</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="n">df</span><span class="p">.</span><span class="n">End</span><span class="p">.</span><span class="nf">max</span><span class="p">(),</span> <span class="n">freq</span><span class="o">=</span><span class="sh">'</span><span class="s">7D</span><span class="sh">'</span><span class="p">).</span><span class="nf">strftime</span><span class="p">(</span><span class="sh">"</span><span class="s">%m/%d</span><span class="sh">"</span><span class="p">).</span><span class="nf">tolist</span><span class="p">()</span> 
<span class="n">ax</span><span class="p">.</span><span class="nf">set_xticks</span><span class="p">(</span><span class="n">xticks</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_xticklabels</span><span class="p">([</span><span class="nf">str</span><span class="p">(</span><span class="n">label</span><span class="p">)</span> <span class="k">for</span> <span class="n">label</span> <span class="ow">in</span> <span class="n">xticks_labels</span><span class="p">])</span>  <span class="c1"># Convert Timestamps to strings
</span><span class="n">ax</span><span class="p">.</span><span class="nf">set_yticks</span><span class="p">([])</span>

<span class="c1"># ticks top
</span><span class="n">ax_top</span> <span class="o">=</span> <span class="n">ax</span><span class="p">.</span><span class="nf">twiny</span><span class="p">()</span>

<span class="c1"># align x axis
</span><span class="n">ax</span><span class="p">.</span><span class="nf">set_xlim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">end_num</span><span class="p">.</span><span class="nf">max</span><span class="p">()</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span>
<span class="n">ax_top</span><span class="p">.</span><span class="nf">set_xlim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">end_num</span><span class="p">.</span><span class="nf">max</span><span class="p">()</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span>

<span class="c1"># top ticks (markings)
</span><span class="n">xticks_top_minor</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">end_num</span><span class="p">.</span><span class="nf">max</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span>  <span class="c1"># Minor ticks every 7 days
</span><span class="n">ax_top</span><span class="p">.</span><span class="nf">set_xticks</span><span class="p">(</span><span class="n">xticks_top_minor</span><span class="p">,</span> <span class="n">minor</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># top ticks (label)
</span><span class="n">xticks_top_major</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="mf">3.5</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">end_num</span><span class="p">.</span><span class="nf">max</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span>  <span class="c1"># Major ticks to align with weeks
</span><span class="n">ax_top</span><span class="p">.</span><span class="nf">set_xticks</span><span class="p">(</span><span class="n">xticks_top_major</span><span class="p">,</span> <span class="n">minor</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>

<span class="c1"># week labels
</span><span class="n">xticks_top_labels</span> <span class="o">=</span> <span class="p">[</span><span class="sa">f</span><span class="sh">"</span><span class="s">W</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="sh">"</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nf">len</span><span class="p">(</span><span class="n">xticks_top_major</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)]</span>
<span class="n">ax_top</span><span class="p">.</span><span class="nf">set_xticklabels</span><span class="p">(</span><span class="n">xticks_top_labels</span><span class="p">,</span> <span class="n">ha</span><span class="o">=</span><span class="sh">'</span><span class="s">center</span><span class="sh">'</span><span class="p">,</span> <span class="n">minor</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">90</span><span class="p">)</span>

<span class="c1"># hide major tick (we only want the label)
</span><span class="n">ax_top</span><span class="p">.</span><span class="nf">tick_params</span><span class="p">(</span><span class="n">which</span><span class="o">=</span><span class="sh">'</span><span class="s">major</span><span class="sh">'</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">w</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># increase minor ticks (to mark the weeks start and end)
</span><span class="n">ax_top</span><span class="p">.</span><span class="nf">tick_params</span><span class="p">(</span><span class="n">which</span><span class="o">=</span><span class="sh">'</span><span class="s">minor</span><span class="sh">'</span><span class="p">,</span> <span class="n">length</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">k</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># remove spines
</span><span class="n">ax</span><span class="p">.</span><span class="n">spines</span><span class="p">[</span><span class="sh">'</span><span class="s">right</span><span class="sh">'</span><span class="p">].</span><span class="nf">set_visible</span><span class="p">(</span><span class="bp">False</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">spines</span><span class="p">[</span><span class="sh">'</span><span class="s">left</span><span class="sh">'</span><span class="p">].</span><span class="nf">set_visible</span><span class="p">(</span><span class="bp">False</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">spines</span><span class="p">[</span><span class="sh">'</span><span class="s">left</span><span class="sh">'</span><span class="p">].</span><span class="nf">set_position</span><span class="p">((</span><span class="sh">'</span><span class="s">outward</span><span class="sh">'</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>
<span class="n">ax</span><span class="p">.</span><span class="n">spines</span><span class="p">[</span><span class="sh">'</span><span class="s">top</span><span class="sh">'</span><span class="p">].</span><span class="nf">set_visible</span><span class="p">(</span><span class="bp">False</span><span class="p">)</span>

<span class="n">ax_top</span><span class="p">.</span><span class="n">spines</span><span class="p">[</span><span class="sh">'</span><span class="s">right</span><span class="sh">'</span><span class="p">].</span><span class="nf">set_visible</span><span class="p">(</span><span class="bp">False</span><span class="p">)</span>
<span class="n">ax_top</span><span class="p">.</span><span class="n">spines</span><span class="p">[</span><span class="sh">'</span><span class="s">left</span><span class="sh">'</span><span class="p">].</span><span class="nf">set_visible</span><span class="p">(</span><span class="bp">False</span><span class="p">)</span>
<span class="n">ax_top</span><span class="p">.</span><span class="n">spines</span><span class="p">[</span><span class="sh">'</span><span class="s">top</span><span class="sh">'</span><span class="p">].</span><span class="nf">set_visible</span><span class="p">(</span><span class="bp">False</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">suptitle</span><span class="p">(</span><span class="sh">'</span><span class="s">Summary Schedule - Building A</span><span class="sh">'</span><span class="p">,</span> 
<span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">,</span> <span class="n">fontweight</span><span class="o">=</span><span class="sh">'</span><span class="s">bold</span><span class="sh">'</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">black</span><span class="sh">'</span><span class="p">,</span> <span class="n">ha</span><span class="o">=</span><span class="sh">'</span><span class="s">center</span><span class="sh">'</span><span class="p">,</span> <span class="n">va</span><span class="o">=</span><span class="sh">'</span><span class="s">top</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">subplots_adjust</span><span class="p">(</span><span class="n">top</span><span class="o">=</span><span class="mf">0.85</span><span class="p">)</span>  <span class="c1"># Adjust the top margin to add space under the title
</span></code></pre></div></div> <p>Finally, we add legends, hide the bottom ticks and labels, draw a vertical line at the status date, and add a label for the status date.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">##### LEGENDS #####
</span><span class="n">legend_elements</span> <span class="o">=</span> <span class="p">[</span><span class="nc">Patch</span><span class="p">(</span><span class="n">facecolor</span><span class="o">=</span><span class="sh">'</span><span class="s">#E64646</span><span class="sh">'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sh">'</span><span class="s">Contractor A</span><span class="sh">'</span><span class="p">),</span>
                   <span class="nc">Patch</span><span class="p">(</span><span class="n">facecolor</span><span class="o">=</span><span class="sh">'</span><span class="s">#E69646</span><span class="sh">'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sh">'</span><span class="s">Contractor B</span><span class="sh">'</span><span class="p">),</span>
                   <span class="nc">Patch</span><span class="p">(</span><span class="n">facecolor</span><span class="o">=</span><span class="sh">'</span><span class="s">#34D05C</span><span class="sh">'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sh">'</span><span class="s">Contractor C</span><span class="sh">'</span><span class="p">),</span>
                   <span class="nc">Patch</span><span class="p">(</span><span class="n">facecolor</span><span class="o">=</span><span class="sh">'</span><span class="s">#34D0C3</span><span class="sh">'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sh">'</span><span class="s">Contractor D</span><span class="sh">'</span><span class="p">),</span>
                   <span class="nc">Patch</span><span class="p">(</span><span class="n">facecolor</span><span class="o">=</span><span class="sh">'</span><span class="s">#3475D0</span><span class="sh">'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sh">'</span><span class="s">All</span><span class="sh">'</span><span class="p">)]</span>

<span class="n">ax</span><span class="p">.</span><span class="nf">legend</span><span class="p">(</span><span class="n">handles</span><span class="o">=</span><span class="n">legend_elements</span><span class="p">,</span> <span class="n">loc</span><span class="o">=</span><span class="sh">"</span><span class="s">upper right</span><span class="sh">"</span><span class="p">,</span> <span class="n">frameon</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">bbox_to_anchor</span><span class="o">=</span><span class="p">(</span><span class="mf">0.25</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">))</span>

<span class="c1"># Hide bottom ticks and labels
</span><span class="n">ax</span><span class="p">.</span><span class="nf">tick_params</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="sh">'</span><span class="s">x</span><span class="sh">'</span><span class="p">,</span> <span class="n">which</span><span class="o">=</span><span class="sh">'</span><span class="s">both</span><span class="sh">'</span><span class="p">,</span> <span class="n">bottom</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">labelbottom</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>

<span class="c1"># Add a status line for today's date
</span><span class="n">status</span> <span class="o">=</span> <span class="nc">Timestamp</span><span class="p">(</span><span class="sh">"</span><span class="s">2024-10-11</span><span class="sh">"</span><span class="p">)</span>  

<span class="n">status_num</span> <span class="o">=</span> <span class="p">(</span><span class="n">status</span> <span class="o">-</span> <span class="n">proj_start</span><span class="p">).</span><span class="n">days</span>  <span class="c1"># Calculate number of days since project start
</span>
<span class="c1"># Draw a vertical line at the status position
</span><span class="n">ax</span><span class="p">.</span><span class="nf">axvline</span><span class="p">(</span><span class="n">status_num</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">red</span><span class="sh">'</span><span class="p">,</span> <span class="n">linestyle</span><span class="o">=</span><span class="sh">'</span><span class="s">--</span><span class="sh">'</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mf">1.5</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sh">'</span><span class="s">Today</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># Optionally, add a label to indicate the status line
</span><span class="n">ax</span><span class="p">.</span><span class="nf">text</span><span class="p">(</span><span class="n">status_num</span> <span class="o">+</span> <span class="mf">0.5</span><span class="p">,</span> <span class="nf">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span> <span class="o">-</span> <span class="mf">0.5</span><span class="p">,</span> <span class="sh">'</span><span class="s">2024-10-11</span><span class="sh">'</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">red</span><span class="sh">'</span><span class="p">,</span> <span class="n">va</span><span class="o">=</span><span class="sh">'</span><span class="s">center</span><span class="sh">'</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">8</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div> <p>Voila.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/gant_chart.png" sizes="95vw"/> <img src="/assets/img/gant_chart.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Gantt chart in Python using Matplotlib. You can further customize the chart by changing the colors, adding more data, or modifying the labels. The possibilities are endless.</p>]]></content><author><name></name></author><category term="visualization"/><category term="schedule"/><category term="code"/><category term="python"/><summary type="html"><![CDATA[making customizable gant chart in python using matplotlib]]></summary></entry><entry><title type="html">a post with tabs2</title><link href="https://radebajic.github.io/blog/2024/tabs/" rel="alternate" type="text/html" title="a post with tabs2"/><published>2024-05-01T00:32:13+00:00</published><updated>2024-05-01T00:32:13+00:00</updated><id>https://radebajic.github.io/blog/2024/tabs</id><content type="html" xml:base="https://radebajic.github.io/blog/2024/tabs/"><![CDATA[<p>This is how a post with <a href="https://github.com/Ovski4/jekyll-tabs">tabs</a> looks like. Note that the tabs could be used for different purposes, not only for code.</p> <h2 id="first-tabs">First tabs</h2> <p>To add tabs, use the following syntax:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">tabs</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-1</span><span class="w"> </span><span class="cp">%}</span>

Content 1

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-2</span><span class="w"> </span><span class="cp">%}</span>

Content 2

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtabs</span><span class="w"> </span><span class="cp">%}</span>
</code></pre></div></div> <p>With this you can generate visualizations like:</p> <ul id="log" class="tab" data-tab="ddeb2476-4cc6-4199-867a-14ab1da39f17" data-name="log"> <li class="active" id="log-php"> <a href="#">php </a> </li> <li id="log-js"> <a href="#">js </a> </li> <li id="log-ruby"> <a href="#">ruby </a> </li> </ul> <ul class="tab-content" id="ddeb2476-4cc6-4199-867a-14ab1da39f17" data-name="log"> <li class="active"> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">var_dump</span><span class="p">(</span><span class="s1">'hello'</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">pputs</span> <span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span>
</code></pre></div></div> </li> </ul> <h2 id="another-example">Another example</h2> <ul id="data-struct" class="tab" data-tab="66dbc59e-e122-47cf-9b01-0e0df6083786" data-name="data-struct"> <li class="active" id="data-struct-yaml"> <a href="#">yaml </a> </li> <li id="data-struct-json"> <a href="#">json </a> </li> </ul> <ul class="tab-content" id="66dbc59e-e122-47cf-9b01-0e0df6083786" data-name="data-struct"> <li class="active"> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">hello</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">whatsup"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">hi"</span>
</code></pre></div></div> </li> <li> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"hello"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"whatsup"</span><span class="p">,</span><span class="w"> </span><span class="s2">"hi"</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> </li> </ul> <h2 id="tabs-for-something-else">Tabs for something else</h2> <ul id="something-else" class="tab" data-tab="9a35df99-bc58-4065-9a3f-22c0a4376cd6" data-name="something-else"> <li class="active" id="something-else-text"> <a href="#">text </a> </li> <li id="something-else-quote"> <a href="#">quote </a> </li> <li id="something-else-list"> <a href="#">list </a> </li> </ul> <ul class="tab-content" id="9a35df99-bc58-4065-9a3f-22c0a4376cd6" data-name="something-else"> <li class="active"> <p>Regular text</p> </li> <li> <blockquote> <p>A quote</p> </blockquote> </li> <li> <p>Hipster list</p> <ul> <li>brunch</li> <li>fixie</li> <li>raybans</li> <li>messenger bag</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included tabs in a post could look like]]></summary></entry><entry><title type="html">a post with code</title><link href="https://radebajic.github.io/blog/2015/code/" rel="alternate" type="text/html" title="a post with code"/><published>2015-07-15T15:09:00+00:00</published><updated>2015-07-15T15:09:00+00:00</updated><id>https://radebajic.github.io/blog/2015/code</id><content type="html" xml:base="https://radebajic.github.io/blog/2015/code/"><![CDATA[<p>This theme implements a built-in Jekyll feature, the use of Rouge, for syntax highlighting. It supports more than 100 languages. This example is in C++. All you have to do is wrap your code in markdown code tags:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">c++
</span><span class="n">code</span> <span class="n">code</span> <span class="n">code</span>
<span class="p">```</span>
</code></pre></div></div> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="k">const</span> <span class="err">\</span><span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"input a string: "</span><span class="p">;</span>
    <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">myString</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">myString</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>

    <span class="kt">char</span> <span class="n">charArray</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span> <span class="o">*</span> <span class="p">[</span><span class="n">length</span><span class="p">];</span>

    <span class="n">charArray</span> <span class="o">=</span> <span class="n">myString</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">charArray</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <p>For displaying code in a list item, you have to be aware of the indentation, as stated in this <a href="https://stackoverflow.com/questions/34987908/embed-a-code-block-in-a-list-item-with-proper-indentation-in-kramdown/38090598#38090598">Stackoverflow answer</a>. You must indent your code by <strong>(3 * bullet_indent_level)</strong> spaces. This is because kramdown (the markdown engine used by Jekyll) indentation for the code block in lists is determined by the column number of the first non-space character after the list item marker. For example:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">1.</span> We can put fenced code blocks inside nested bullets, too.
<span class="p">
   1.</span> Like this:<span class="sb">

      ```c
      printf("Hello, World!");
      ```

</span><span class="p">   2.</span> The key is to indent your fenced block in the same line as the first character of the line.
</code></pre></div></div> <p>Which displays:</p> <ol> <li> <p>We can put fenced code blocks inside nested bullets, too.</p> <ol> <li> <p>Like this:</p> <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">printf</span><span class="p">(</span><span class="s">"Hello, World!"</span><span class="p">);</span>
</code></pre></div> </div> </li> <li> <p>The key is to indent your fenced block in the same line as the first character of the line.</p> </li> </ol> </li> </ol> <p>By default, it does not display line numbers. If you want to display line numbers for every code block, you can set <code class="language-plaintext highlighter-rouge">kramdown.syntax_highlighter_opts.block.line_numbers</code> to true in your <code class="language-plaintext highlighter-rouge">_config.yml</code> file.</p> <p>If you want to display line numbers for a specific code block, all you have to do is wrap your code in a liquid tag:</p> <p>{% highlight c++ linenos %} <br/> code code code <br/> {% endhighlight %}</p> <p>The keyword <code class="language-plaintext highlighter-rouge">linenos</code> triggers display of line numbers. Produces something like this:</p> <figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="code"><pre><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="k">const</span> <span class="err">\</span><span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
<span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"input a string: "</span><span class="p">;</span>
    <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">myString</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">myString</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>

    <span class="kt">char</span> <span class="n">charArray</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span> <span class="o">*</span> <span class="p">[</span><span class="n">length</span><span class="p">];</span>

    <span class="n">charArray</span> <span class="o">=</span> <span class="n">myString</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">charArray</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>

<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[an example of a blog post with some code]]></summary></entry><entry><title type="html">a post with images</title><link href="https://radebajic.github.io/blog/2015/images/" rel="alternate" type="text/html" title="a post with images"/><published>2015-05-15T21:01:00+00:00</published><updated>2015-05-15T21:01:00+00:00</updated><id>https://radebajic.github.io/blog/2015/images</id><content type="html" xml:base="https://radebajic.github.io/blog/2015/images/"><![CDATA[<p>This is an example post with image galleries.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/9.jpg" sizes="95vw"/> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/7.jpg" sizes="95vw"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> A simple, elegant caption looks good between image rows, after each row, or doesn't have to be there at all. </div> <p>Images can be made zoomable. Simply add <code class="language-plaintext highlighter-rouge">data-zoomable</code> to <code class="language-plaintext highlighter-rouge">&lt;img&gt;</code> tags that you want to make zoomable.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/8.jpg" sizes="95vw"/> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/10.jpg" sizes="95vw"/> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>The rest of the images in this post are all zoomable, arranged into different mini-galleries.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/11.jpg" sizes="95vw"/> <img src="/assets/img/11.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/12.jpg" sizes="95vw"/> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/7.jpg" sizes="95vw"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what included images could look like]]></summary></entry></feed>